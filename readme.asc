= Mapping tools for plotting topographic analyses using python

I am very sorry to say that the documentation for these tools are minimal. We have gone through several iterations of design of these tools so there are many useless dead ends in the repository. Sorry about that. The readme below should give you some insights into where to start if you are interested in trying to use these before we actaully release them with documentation. 

== Authors 
* http://www.geos.ed.ac.uk/homes/smudd[Simon M Mudd]
* https://github.com/dvalters?tab=repositories[Declan Valters]
* https://fionaclubb.wordpress.com/[Fiona Clubb]
* http://www.ed.ac.uk/geosciences/people/person.html?indv=5391[Boris Gailleton]


== General information

These are some plotting tools for working with geospatial data in python. The tools are mostly in the subdirectories in this repository. They are linked packages (in that each subdirectory has an `__init__` file). We have not at this stage created an installer: you simply need to clone this repository and use them from that directory. 

=== The sub-packages are:

* *LSDPlottingTools*: A collection of utilities for plotting. The main geospatial plotting routines are in *LSDMapFigure* but there are some older plotting routines, along with a lot of geospatial bells and whistles, within this packages. The other packages don't work without this. 
* *LSDMapArtist*: The first attempt by https://github.com/dvalters?tab=repositories[Declan Valters] to build a https://matplotlib.org/users/artists.html[artist-based] geospatial plotting platform. The _artist_ bit is an attempt to have a interface something like https://matplotlib.org/[matplotlib]. *This has been replaced by LSDMapFigure and is here for educational purposes*. 
* *LSDMapFigure*: This contains objects used for geospatial plotting.
* *LSDChiMappingExamples*: Don't bother with this for now. It is part of some tutorials we are developing bt those aren't complete so you don't need to look in there. 
* *LSDMapWrappers*: These have some simple plotting functions that allow users to make maps with minimal lines of code. 

=== How to use stuff in the sub-packages

The main repository is littered with functions that we have used to interface with the packages. If you want to get started, try:

* `SMMTestArtist2.py`
* `ChiMappingExamples.py`

Note that you will need data output from http://lsdtopotools.github.io/[LSDTopoTools] for some of these functions. 


=== How do I get all the required python packages?

We have tried many different methods and have found https://conda.io/miniconda.html[miniconda] is the most reproducible. Just download https://conda.io/miniconda.html[miniconda], install, and follow the instructions below. Note that we think these will work on botjh python 2 and 3 but the author of these documents (SMM) is a bit retro and is still using python 2.7. So if you want to be sure everything will work download the 2.7 version. 

==== Setting up python using a conda virtual environment

. Download and install http://conda.pydata.org/miniconda.html[miniconda] on your host machine. 
. Open a command prompt (use the start menu to search for *cmd.exe*)
. Get our  https://raw.githubusercontent.com/LSDtopotools/LSDMappingTools/a1e4bd94911afc25a10ed2482553736bc2ce8894/environment.yml[environment file].
. Create the environment from that file with:
+
[source,console]
----
> conda env create -f environment.yml
----
+
I'm afraid this will take a little while. Actually it will take a very long time. Sorry. 
. Activate the environment:
+
[source,console]
----
> activate LSDTT
----

NOTE: This environment does not include *spyder*, you can install it with `conda install -n LSDTT spyder`


=== Notes

If you are developing this code, you should follow the documentation style explained on the http://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_google.html[readthedocs napolean page].





